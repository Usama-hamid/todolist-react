{"version":3,"sources":["taskItems.js","index.js"],"names":["TaskItems","props","taskItems","items","map","item","className","key","type","id","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","library","add","faTrash","TodoList","state","currentItem","handleInput","bind","addItem","event","this","setState","Date","now","preventDefault","newTask","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iRA+BeA,MA5Bf,SAAmBC,GACjB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,6BACE,yBAAKC,UAAU,iBAAiBC,IAAKF,EAAKE,KACxC,2BACEC,KAAK,OACLF,UAAU,aACVG,GAAIJ,EAAKE,IACTG,MAAOL,EAAKM,KACZC,SAAU,SAACC,GACTZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKE,QAGzC,8BACE,kBAAC,IAAD,CACED,UAAU,UACVU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKE,cAOjD,OAAO,6BAAML,I,eCvBfiB,IAAQC,IAAIC,K,IAENC,E,kDACJ,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CACXpB,MAAO,GACPqB,YAAa,CACXb,KAAM,GACNJ,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAZA,E,wDAcPE,GAEVC,KAAKC,SAAS,CACZN,YAAa,CACXb,KAAMiB,EAAMb,OAAOL,MACnBH,IAAKwB,KAAKC,W,8BAIRJ,GACNA,EAAMK,iBACN,IAAMC,EAAUL,KAAKN,MAAMC,YAC3B,GAAqB,KAAjBU,EAAQvB,KAAa,CACvB,IAAMwB,EAAQ,sBAAON,KAAKN,MAAMpB,OAAlB,CAAyB+B,IACvCL,KAAKC,SAAS,CACZ3B,MAAOgC,EACPX,YAAa,CACXb,KAAM,GACNJ,IAAK,S,iCAKFA,GACT,IAAM6B,EAAgBP,KAAKN,MAAMpB,MAAMkC,QAAO,SAAChC,GAAD,OAAUA,EAAKE,MAAQA,KACrEsB,KAAKC,SAAS,CACZ3B,MAAOiC,M,gCAGDzB,EAAMJ,GACd,IAAMJ,EAAQ0B,KAAKN,MAAMpB,MACzBA,EAAMC,KAAI,SAACC,GACLA,EAAKE,MAAQA,IACfF,EAAKM,KAAOA,MAGhBkB,KAAKC,SAAS,CACZ3B,MAAOA,M,+BAIT,OACE,yBAAKG,UAAU,YACb,0BAAMgC,SAAUT,KAAKF,QAASrB,UAAU,kBACtC,2BACEA,UAAU,aACVE,KAAK,OACLI,SAAUiB,KAAKJ,YACff,MAAOmB,KAAKN,MAAMC,YAAYb,KAC9B4B,YAAY,eAEd,4BAAQ/B,KAAK,SAASF,UAAU,WAAhC,OAEA,kBAAC,EAAD,CACEH,MAAO0B,KAAKN,MAAMpB,MAClBe,WAAYW,KAAKX,WACjBJ,UAAWe,KAAKf,kB,GAvEL0B,IAAMC,WA+E7BC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,W","file":"static/js/main.2ef24c26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction TaskItems(props) {\r\n  const items = props.items;\r\n  const taskItems = items.map((item) => {\r\n    return (\r\n      <div>\r\n        <div className=\"task-item-list\" key={item.key}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-task\"\r\n            id={item.key}\r\n            value={item.text}\r\n            onChange={(e) => {\r\n              props.setUpdate(e.target.value, item.key);\r\n            }}\r\n          />\r\n          <span>\r\n            <FontAwesomeIcon\r\n              className=\"faicons\"\r\n              icon=\"trash\"\r\n              onClick={() => props.deleteItem(item.key)}\r\n            ></FontAwesomeIcon>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{taskItems}</div>;\r\n}\r\nexport default TaskItems;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TaskItems from \"./taskItems\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash);\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props); //pass props to parent component\n    this.state = {\n      items: [], //store array of to do list items\n      currentItem: {\n        text: \"\", //stores text is input value\n        key: \"\", //stores key is going to be unique\n      },\n    };\n    this.handleInput = this.handleInput.bind(this); //binding the handleinput()\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(event) {\n    //handle input seems to lost its context because this keyword doesnot point to the class automatically you have to bind it\n    this.setState({\n      currentItem: {\n        text: event.target.value,\n        key: Date.now(),\n      },\n    });\n  }\n  addItem(event) {\n    event.preventDefault();\n    const newTask = this.state.currentItem;\n    if (newTask.text !== \"\") {\n      const newItems = [...this.state.items, newTask];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\",\n        },\n      });\n    }\n  }\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\n    this.setState({\n      items: filteredItems,\n    });\n  }\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items,\n    });\n  }\n  render() {\n    return (\n      <div className=\"main-div\">\n        <form onSubmit={this.addItem} className=\"list-container\">\n          <input\n            className=\"input-task\"\n            type=\"text\"\n            onChange={this.handleInput}\n            value={this.state.currentItem.text}\n            placeholder=\"Enter Task\"\n          />\n          <button type=\"submit\" className=\"add-btn\">Add</button>\n\n          <TaskItems\n            items={this.state.items}\n            deleteItem={this.deleteItem}\n            setUpdate={this.setUpdate}\n          ></TaskItems>\n          {/* this taskitems will receive as a props in taskitems.js */}\n        </form>\n      </div>\n    );\n  }\n}\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\n"],"sourceRoot":""}